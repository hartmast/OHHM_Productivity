?kappa
d <- read_xlsx("/Users/stefanhartmann/sciebo/Projekte/Graphemic variation/Variation_Abiturkorpus/sfb_fehler.xlsx")
View(d)
View(d)
d <- read_xlsx("/Users/stefanhartmann/sciebo/Projekte/Graphemic variation/Variation_Abiturkorpus/sfb_fehler.xlsx", sheet = "Fehler")
ckappa(cbind(d$`Bsfin Kategorie`, d$`Bsfin Kategorie_SH`))
16+13+16+12+14+15+17+12+8
17+14+14+15+15+5+9+8+6
13+14+12+9+15+8+13+7+5
11+9+16+11+12+13+14+12+3
19+14+12+12+18+13+17+10+4
19+20+20+16+20+24+20+12+8
12+8+12+14+16+13+8+8+6
16+11+16+14+15+10
16+11+16+14+15+10+14+11+8
11+7+16+15+11+13+15+7+8
14+14+12+7.5+8+6+15+7+5
17+10+10+13.5+14+11+16+10+5
19+18+20+16+13+20+15+11+8
19+15+20+13+14+13+18+12+5
18+11+8+14+11+10+18+12+6
19+10+15+12+16+15+13+16
11+5+9+8+14+7+11+12
8+13+11+14+19+17+17+16+20
5+6+5+9+5+14+12+15+10
8+14+12+15+14+14+14+20+12
8+16+6+10+12+10+20+11+8
5+7+8+10+9+12+4
13+9+12+17+9
15+17+10+23+19+8
18+12+10+16+15+8
18+7+8+24+15+8
17+19+10+18+18+8
13+5+13+16+16+4
18+12+12+24+17+8
20+17+11+23+19+8
15+10+13+24+16+8
15+19+15+12+11+22+17+12+8
3500*0.8
3500*0.008
10*1080
10800/60
9+11+7+6+16+15+19+20+16
14+9+11+17+12+13+8+10
19+16+16+16+18+24+20+12+6
12+15+12+20+20+18+20+19+16
8+13+9+20+17+15+4
15+20+20+20+20+18+20+24
13+18+19+20+20+19+18+24
65/3
(65/3)/12
4.3/152
4.3/152*1e6
3.8e6/147
3.8e6/147*1e6
152/4.2*1e6
152/(4.2*1e6)
(152/(4.2*1e6))*1e6
(147/(3.8*1e6))*1e6
3345897*(1/320)
5728-34
2022-2004
52*30
514.37*4
474.80*4
install.packages("polmineR")
install.packages("GermaParl")
use("GermaParl")
library(polmineR)
use("GermaParl")
corpus()
size("GERMAPARL")
size(GERMAPARL)
size("GERMAPARLMINI")
?corpus
devtools::install_github("PolMine/GermaParl", ref = "dev")
75*35
2625/100
100*15
1500/10
95*10
950/100
9.5+26.25+300+100+150
(75*35)/100
(100*10)/100
(100*15)/100
9.5+26.25+30+10+15
(70*35)/100
9.5+24.5+30+10+15
setwd("/Users/stefanhartmann/sciebo/Projekte/OHHM/Productivity_OHHM")
library(tidyverse)
library(patchwork)
library(zipfR)
library(pbapply)
# read data: full CLMET frequency list
d <- read_delim("clmet_lemma_period.txt", delim = "\t", quote = "",
col_names = c("Freq", "lemma", "period"))
d
# omit punctuation:
# we replace all instances where the string consísts only
# of punctuation
d <- d[-grep("^[[:punct:]]+", d$lemma),]
# frequency list per period
d_tbl <- d %>% group_by(lemma, period) %>% summarise(
n = sum(Freq)
)
# frequency list for the entire corpus
d_tbl2 <- d %>% group_by(lemma) %>% summarise(
n_all = sum(Freq)
)
# combine both tables
d_tbl <- left_join(d_tbl, d_tbl2)
# add hapax column
d_tbl <- mutate(d_tbl, hapax = ifelse(n_all == 1, TRUE, FALSE))
# find tokens ending in -hood
d_tbl <- mutate(as.data.frame(d_tbl), hood = grepl(".+hood", d_tbl$lemma))
productivity <- d_tbl %>% group_by(period) %>% summarise(
types_hood = length(which(hood==TRUE)),
types_all = n(),
tokens_hood = sum(n[hood == TRUE]),
tokens_all = sum(n),
hapaxes_hood = length(which(hood == TRUE & hapax == TRUE)),
hapaxes_all = length(which(hapax == TRUE)),
pot_prod = hapaxes_hood / tokens_hood,
real_prod = types_hood / tokens_all,
expand_prod = hapaxes_hood / hapaxes_all
)
(p1 <- ggplot(productivity, aes(x = period, y = pot_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd = 1.5, col = "grey20") + ylab("Potential Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(plot.margin = margin(0,0,18,0)) + ylim(c(0,0.025)) )
(p2 <- ggplot(productivity, aes(x = period, y = real_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd = 1.5, col = "grey20") + ylab("Realized Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(plot.margin = margin(0,5,18,0)) + ylim(c(0,8e-06)))
(p3 <- ggplot(productivity, aes(x = period, y = expand_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd=1.5, col = "grey20") + ylab("Expanding Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) + ylim(c(0,2e-03)) )
(p4 <- ggplot(productivity, aes(x = pot_prod, y = real_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd=1.5, col = "grey20") + ylab("Realized productivity") +
xlab("Potential productivity") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(axis.text.x = element_text(angle=45, hjust=.9, size=12)) +
ylim(c(0, 7.2e-06)))
x <- tibble(a = 1,
b = 1)
# insets for "numbering" the plots:
p1a <- ggplot(x, aes(x = a, y = b, label = "A")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
p1b <- ggplot(x, aes(x = a, y = b, label = "B")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
p1c <- ggplot(x, aes(x = a, y = b, label = "C")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
p1d <- ggplot(x, aes(x = a, y = b, label = "D")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
# 2x2 array:
(p2 + inset_element(p1a, left = 0, bottom = 0.9, right = .1, top = 1) |
p1 + inset_element(p1b, left = 1, bottom = 0.9, right = 0.9, top = 1) ) /
(p3 + inset_element(p1c, left = 0, bottom = 0.9, right = .1, top = 1) |
p4 + inset_element(p1d, left = 1, bottom = 0.9, right = 0.9, top = 1) )
setdiff(
d %>% filter(period == levels(factor(d$period))[1] & hood == TRUE) %>% select(lemma) %>% unlist %>% unname,
d %>% filter(period == levels(factor(d$period))[3] & hood == TRUE) %>% select(lemma) %>% unlist %>% unname
)
d %>% filter(period == levels(factor(d$period))[1]) %>% select(lemma) %>% unlist %>% unname
p2
d$period
d$period %>% unique
filter(d, period == "1710-1780")
filter(d, period == "1710-1780")$lemma
filter(d, period == "1710-1780")$lemma %>% unique
lp01 <- filter(d, period == "1710-1780")$lemma %>% unique
d$period %>% unique
lp0102 <- filter(d, period %in% c("1710-1780", "1780-1850"))
lp0102 <- filter(d, period %in% c("1710-1780", "1780-1850"))$lemma %>% unique
grep(".+hood", lp01)
grep(".+hood", lp01, value = T)
lp02 <- filter(d, period == "1780-1850")$lemma %>% unique
# which -hood nouns in
grep(".+hood", lp01, value = T)
grep(".+hood", lp02, value = T)
# which -hood nouns in
setdiff(grep(".+hood", lp02, value = T), grep(".+hood", lp01, value = T))
setdiff(grep(".+ness", lp02, value = T), grep(".+ness", lp01, value = T))
grep(".+ness", lp02)
grep(".+ness", lp02) %>% length
grep(".+ness", lp01) %>% length
# which -hood nouns in
setdiff(grep(".+hood", lp02, value = T), grep(".+hood", lp01, value = T))
setdiff(grep(".+ness", lp02, value = T), grep(".+ness", lp01, value = T))
setdiff(grep(".+ness", lp02, value = T), grep(".+ness", lp01, value = T))
lp02 <- filter(d, period == "1850-1910")$lemma %>% unique
d$period %>% unique
lp02 <- filter(d, period == "1850-1920")$lemma %>% unique
lp02 <- filter(d, period == "1780-1850")$lemma %>% unique
lp03 <- filter(d, period == "1850-1920")$lemma %>% unique
setdiff(grep(".+ness", lp03, value = T), grep(".+ness", lp0102, value = T))
setdiff(grep(".+hood", lp03, value = T), grep(".+hood", lp0102, value = T))
setdiff(grep(".+hood", lp03, value = T), grep(".+hood", lp0102, value = T))
setdiff(grep(".+ness", lp03, value = T), grep(".+ness", lp0102, value = T))
setdiff(grep(".+hood", lp03, value = T), grep(".+hood", lp0102, value = T))
# which -hood nouns in
setdiff(grep(".+hood$", lp02, value = T), grep(".+hood$", lp01, value = T))
setdiff(grep(".+ness$", lp02, value = T), grep(".+ness$", lp01, value = T))
setdiff(grep(".+hood$", lp03, value = T), grep(".+hood$", lp0102, value = T))
setdiff(grep(".+hood$", lp03, value = T), grep(".+hood$", lp0102, value = T))
setdiff(grep(".+ness$", lp03, value = T), grep(".+ness$", lp0102, value = T))
setdiff(grep(".+hood$", lp03, value = T), grep(".+hood$", lp0102, value = T))
library(tidyverse)
library(patchwork)
library(zipfR)
library(pbapply)
# read data: full CLMET frequency list
d <- read_delim("clmet_lemma_period.txt", delim = "\t", quote = "",
col_names = c("Freq", "lemma", "period"))
# omit punctuation:
# we replace all instances where the string consísts only
# of punctuation
d <- d[-grep("^[[:punct:]]+", d$lemma),]
# frequency list per period
d_tbl <- d %>% group_by(lemma, period) %>% summarise(
n = sum(Freq)
)
# frequency list for the entire corpus
d_tbl2 <- d %>% group_by(lemma) %>% summarise(
n_all = sum(Freq)
)
# combine both tables
d_tbl <- left_join(d_tbl, d_tbl2)
# add hapax column
d_tbl <- mutate(d_tbl, hapax = ifelse(n_all == 1, TRUE, FALSE))
# find tokens ending in -hood
d_tbl <- mutate(as.data.frame(d_tbl), hood = grepl(".+hood", d_tbl$lemma))
productivity <- d_tbl %>% group_by(period) %>% summarise(
types_hood = length(which(hood==TRUE)),
types_all = n(),
tokens_hood = sum(n[hood == TRUE]),
tokens_all = sum(n),
hapaxes_hood = length(which(hood == TRUE & hapax == TRUE)),
hapaxes_all = length(which(hapax == TRUE)),
pot_prod = hapaxes_hood / tokens_hood,
real_prod = types_hood / tokens_all,
expand_prod = hapaxes_hood / hapaxes_all
)
(p1 <- ggplot(productivity, aes(x = period, y = pot_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd = 1.5, col = "grey20") + ylab("Potential Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(plot.margin = margin(0,0,18,0)) + ylim(c(0,0.025)) )
(p2 <- ggplot(productivity, aes(x = period, y = real_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd = 1.5, col = "grey20") + ylab("Realized Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(plot.margin = margin(0,5,18,0)) + ylim(c(0,8e-06)))
(p3 <- ggplot(productivity, aes(x = period, y = expand_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd=1.5, col = "grey20") + ylab("Expanding Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) + ylim(c(0,2e-03)) )
(p4 <- ggplot(productivity, aes(x = pot_prod, y = real_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd=1.5, col = "grey20") + ylab("Realized productivity") +
xlab("Potential productivity") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(axis.text.x = element_text(angle=45, hjust=.9, size=12)) +
ylim(c(0, 7.2e-06)))
x <- tibble(a = 1,
b = 1)
# insets for "numbering" the plots:
p1a <- ggplot(x, aes(x = a, y = b, label = "A")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
p1b <- ggplot(x, aes(x = a, y = b, label = "B")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
p1c <- ggplot(x, aes(x = a, y = b, label = "C")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
p1d <- ggplot(x, aes(x = a, y = b, label = "D")) + geom_text(size = 12) +
theme_void() + theme(panel.background = element_rect(fill = "white", color = "white"))
# 2x2 array:
(p2 + inset_element(p1a, left = 0, bottom = 0.9, right = .1, top = 1) |
p1 + inset_element(p1b, left = 1, bottom = 0.9, right = 0.9, top = 1) ) /
(p3 + inset_element(p1c, left = 0, bottom = 0.9, right = .1, top = 1) |
p4 + inset_element(p1d, left = 1, bottom = 0.9, right = 0.9, top = 1) )
setdiff(
d %>% filter(period == levels(factor(d$period))[1] & hood == TRUE) %>% select(lemma) %>% unlist %>% unname,
d %>% filter(period == levels(factor(d$period))[3] & hood == TRUE) %>% select(lemma) %>% unlist %>% unname
)
d %>% filter(period == levels(factor(d$period))[1]) %>% select(lemma) %>% unlist %>% unname
# lemmas for each period
lp01 <- filter(d, period == "1710-1780")$lemma %>% unique
lp0102 <- filter(d, period %in% c("1710-1780", "1780-1850"))$lemma %>% unique
lp02 <- filter(d, period == "1780-1850")$lemma %>% unique
lp03 <- filter(d, period == "1850-1920")$lemma %>% unique
# which -hood nouns in
setdiff(grep(".+hood$", lp02, value = T), grep(".+hood$", lp01, value = T))
setdiff(grep(".+ness$", lp02, value = T), grep(".+ness$", lp01, value = T))
setdiff(grep(".+hood$", lp03, value = T), grep(".+hood$", lp0102, value = T))
setdiff(grep(".+ness$", lp03, value = T), grep(".+ness$", lp0102, value = T))
# period 1
filter(d, period == levels(factor(d$period))[1])$Freq %>%
table %>%
as_tibble() %>%
setNames(c("m", "Vm")) %>% write.table("clmet_hood_period01.spc", row.names=F, quote=F, sep="\t")
# period 2
filter(d, period == levels(factor(d$period))[2])$Freq %>%
table %>%
as_tibble() %>%
setNames(c("m", "Vm")) %>% write.table("clmet_hood_period02.spc", row.names=F, quote=F, sep="\t")
# period 3
filter(d, period == levels(factor(d$period))[3])$Freq %>%
table %>%
as_tibble() %>%
setNames(c("m", "Vm")) %>% write.table("clmet_hood_period03.spc", row.names=F, quote=F, sep="\t")
# read spc files
hood_spc01 <- read.spc("clmet_hood_period01.spc")
hood_spc02 <- read.spc("clmet_hood_period02.spc")
hood_spc03 <- read.spc("clmet_hood_period03.spc")
# Zipf-Mandelbrot model
fzm01 <- lnre("fzm", hood_spc01, m.max=1)
fzm02 <- lnre("fzm", hood_spc02, m.max=1)
fzm03 <- lnre("fzm", hood_spc03, m.max=1)
# lnre.spc
fzm.spc01 <-  lnre.spc(fzm01, N(fzm01))
fzm.spc02 <-  lnre.spc(fzm02, N(fzm02))
fzm.spc03 <-  lnre.spc(fzm03, N(fzm03))
plot(hood_spc01, fzm.spc01, legend = c("observed", "fZM"))
plot(hood_spc02, fzm.spc02, legend = c("observed", "fZM"))
plot(hood_spc03, fzm.spc03, legend = c("observed", "fZM"))
# goodness of fit:
summary(fzm01)
summary(fzm02)
summary(fzm03)
# extrapolated vocbulary growth curves
period01.vgc <- lnre.vgc(fzm01, 1:1e07, m.max = 1)
period02.vgc <- lnre.vgc(fzm02, 1:1e07, m.max = 1)
period03.vgc <- lnre.vgc(fzm03, 1:1e07, m.max = 1)
# get empirical vocabulary growth
p01 <- readLines("clmet_hood_period01.txt")
p01 <- gsub(".*<|>", "", p01)
p02 <- readLines("clmet_hood_period02.txt")
p02 <- gsub(".*<|>", "", p02)
p03 <- readLines("clmet_hood_period03.txt")
p03 <- gsub(".*<|>", "", p03)
d
length(unique(d$lemma))
d_tbl
d_tbl[hood]
d_tbl[hood==TRUE,]
filter(d_tbl, hood==TRUE)
filter(d_tbl, hood==TRUE) %>% select(lemma)
filter(d_tbl, hood==TRUE) %>% select(lemma) %>% unique
filter(d_tbl, hood==TRUE)
filter(d_tbl, hood==TRUE) %>% openxlsx::write.xlsx("hood.xlsx")
filter(d_tbl, hood==TRUE) %>% select(lemma) %>% unique %>% openxlsx::write.xlsx("hood.xlsx")
library(tidyverse)
library(patchwork)
library(zipfR)
library(pbapply)
# CQP query:
# cwb-scan-corpus CLMET lemma text_period >  "clmet_lemma_period.txt"
# read data: full CLMET frequency list
d <- read_delim("clmet_lemma_period.txt", delim = "\t", quote = "",
col_names = c("Freq", "lemma", "period"))
# omit punctuation:
# we replace all instances where the string consísts only
# of punctuation
d <- d[-grep("^[[:punct:]]+", d$lemma),]
# frequency list per period
d_tbl <- d %>% group_by(lemma, period) %>% summarise(
n = sum(Freq)
)
# frequency list for the entire corpus
d_tbl2 <- d %>% group_by(lemma) %>% summarise(
n_all = sum(Freq)
)
# combine both tables
d_tbl <- left_join(d_tbl, d_tbl2)
# add hapax column
d_tbl <- mutate(d_tbl, hapax = ifelse(n_all == 1, TRUE, FALSE))
d_tbl2
d_tbl
library(tidyverse)
library(patchwork)
library(zipfR)
library(pbapply)
# CQP query:
# cwb-scan-corpus CLMET lemma text_period >  "clmet_lemma_period.txt"
# read data: full CLMET frequency list
d <- read_delim("clmet_lemma_period.txt", delim = "\t", quote = "",
col_names = c("Freq", "lemma", "period"))
# omit punctuation:
# we replace all instances where the string consísts only
# of punctuation
d <- d[-grep("^[[:punct:]]+", d$lemma),]
# find hapaxes
# frequency list per period
d_tbl <- d %>% group_by(lemma, period) %>% summarise(
n = sum(Freq)
)
# frequency list for the entire corpus
d_tbl2 <- d %>% group_by(lemma) %>% summarise(
n_all = sum(Freq)
)
# combine both tables
d_tbl <- left_join(d_tbl, d_tbl2)
# add hapax column
d_tbl <- mutate(d_tbl, hapax = ifelse(n_all == 1, TRUE, FALSE))
# find tokens ending in -hood
d_tbl <- mutate(as.data.frame(d_tbl), hood = grepl(".+hood", d_tbl$lemma))
productivity <- d_tbl %>% group_by(period) %>% summarise(
types_hood = length(which(hood==TRUE)),
types_all = n(),
tokens_hood = sum(n[hood == TRUE]),
tokens_all = sum(n),
hapaxes_hood = length(which(hood == TRUE & hapax == TRUE)),
hapaxes_all = length(which(hapax == TRUE)),
pot_prod = hapaxes_hood / tokens_hood,
real_prod = types_hood / tokens_all,
expand_prod = hapaxes_hood / hapaxes_all
)
(p1 <- ggplot(productivity, aes(x = period, y = pot_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd = 1.5, col = "grey20") + ylab("Potential Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(plot.margin = margin(0,0,18,0)) + ylim(c(0,0.025)) )
(p2 <- ggplot(productivity, aes(x = period, y = real_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd = 1.5, col = "grey20") + ylab("Realized Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(plot.margin = margin(0,5,18,0)) + ylim(c(0,8e-06)))
(p3 <- ggplot(productivity, aes(x = period, y = expand_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd=1.5, col = "grey20") + ylab("Expanding Productivity") +
xlab("Period") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) + ylim(c(0,2e-03)) )
(p4 <- ggplot(productivity, aes(x = pot_prod, y = real_prod, group = 1)) +
geom_point(size=2, col = "blue") + geom_line(lwd=1.5, col = "grey20") + ylab("Realized productivity") +
xlab("Potential productivity") + ggtitle(expression(paste(italic("hood"), ", CLMET"))) +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
theme(axis.text = element_text(size = 18)) +
theme(axis.title = element_text(size = 18)) +
theme(strip.text = element_text(size = 18)) +
theme(legend.text = element_text(size = 18)) +
theme(legend.title = element_text(size = 18, face = "bold")) +
theme(text = element_text(size = 18)) +
theme(axis.text.x = element_text(angle=45, hjust=.9, size=12)) +
ylim(c(0, 7.2e-06)))
